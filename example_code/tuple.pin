// 作为函数参数
fn test1(){
	var a = (1, 2.0, "hello");
	fn foo(a (int,float,str)){
		printf("tuple={}\n", a);
	}
	foo(a);
}

// 作为函数返回值
fn test2(){
	fn foo() (int,str){
		return (1, "dl");
	}
	var r = foo();
	printf("result={}\n", r);
}

// 访问元素, 修改元素
fn test3(){
	var t (int, str) = (1, "dl");
	printf("t.f0={} t.f1={}\n", t.f0, t.f1);
	t.f0=1000;
	printf("t.f0={} t.f1={}\n", t.f0, t.f1);
}


fn main(args []str)int{
	test1();
	test2();

	return 0;
}
