fn simple_fn(a int, b int) int{
	return a+b;
}

fn generic_fn[T Add[T,T]](a T, b T) T{
	return a+b;
}

fn complex_fn{
	(a int)int{ return a; }
	(a float)str{ return "float spec"; }
	[T Add[T,T]](a T, b T)T{ return a+b; }
	[T Add[T,T]](a T, b T, c T)T{ return a+b+c; }
}

printf("simple_fn(1,2)={}\n", simple_fn(1,2));

printf("generic_fn(1,2)={}\n", generic_fn(1,2));
printf("generic_fn(1.3,2.9)={}\n", generic_fn(1.3,2.9));

printf("complex_fn(1)={}\n", complex_fn(1));
printf("complex_fn(1,2)={}\n", complex_fn(1,2));
printf("complex_fn(1,2,3)={}\n", complex_fn(1,2,3));

printf("complex_fn(1.1)={}\n", complex_fn(1.1));
printf("complex_fn(1.3,2.4)={}\n", complex_fn(1.3,2.4));
printf("complex_fn(1.9,2.1,3.03)={}\n", complex_fn(1.9,2.1,3.03));
