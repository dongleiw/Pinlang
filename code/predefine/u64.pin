fn __compile_u64_tostring(v u64) String{
	var size u64 = 0;
	if v>=10000000000000000000 {
		size=20;
	}else if v>=1000000000000000000 {
		size=19;
	}else if v>=100000000000000000 {
		size=18;
	}else if v>=10000000000000000 {
		size=17;
	}else if v>=1000000000000000 {
		size=16;
	}else if v>=100000000000000 {
		size=15;
	}else if v>=10000000000000 {
		size=14;
	}else if v>=1000000000000 {
		size=13;
	}else if v>=100000000000 {
		size=12;
	}else if v>=10000000000 {
		size=11;
	}else if v>=1000000000 {
		size=10;
	}else if v>=100000000{
		size=9;
	}else if v>=10000000{
		size=8;
	}else if v>=1000000{
		size=7;
	}else if v>=100000{
		size=6;
	}else if v>=10000{
		size=5;
	}else if v>=1000{
		size=4;
	}else if v>=100{
		size=3;
	}else if v>=10{
		size=2;
	}else{
		size=1;
	}
	var buf = new [size]u8();

	var i = size;
	while i>0 {
	    i = i-1;
	    var c = (v%10) as u8;
	    buf[i] = c+48;
	    v = v / 10;
	}

	return String(size, buf);
}
