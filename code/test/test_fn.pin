// test fn

// 修改参数的值
fn test1() {
	fn foo(a i32){
		assert(a==1);
		var pa = &a;
		a=100;
		assert(a==100);
		assert(*pa==100);
	}
	foo(1);
}

// 修改指针参数指向的内存的内容
fn test2() {
	fn foo(pi *i32){
		assert(*pi==1);
		*pi = 2;
		assert(*pi==2);
		var pj = pi;
		assert(*pj==2);
	}
	var i = 1;
	foo(&i);
}

// 修改指针参数的指向
fn test3() {
	fn foo(pi *i32){
		assert(*pi==1);
		var j = 100;
		pi = &j;
		assert(*pi==100);
		*pi = 200;
		assert(*pi==200);
	}
	var i = 1;
	foo(&i);
	assert(i==1);
}

// 字面值类型根据函数类型推导
fn test4(){
	fn foo(a u64){
	}
	foo(1);
}

fn main() i32{
	test1();
	test2();
	test3();
	test4();

	return 0;
}
